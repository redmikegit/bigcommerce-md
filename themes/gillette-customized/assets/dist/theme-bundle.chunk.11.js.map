{"version":3,"sources":["webpack:///./assets/js/theme/category.js","webpack:///./assets/js/theme/common/utils/translations-utils.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/common/utils/url-utils.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Category","context","validationDictionary","createTranslationDictionary","setLiveRegionAttributes","$element","roleType","ariaLiveStatus","attr","role","makeShopByPriceFilterAccessible","$","length","hasClass","focus","on","onReady","this","arrangeFocusOnSortBy","e","currentTarget","next","compareProducts","initFacetedSearch","onSortBySubmit","bind","hooks","setLiveRegionsAttributes","ariaNotifyNoProducts","$noProductsMessage","onMinPriceError","price_min_evaluation","onMaxPriceError","price_max_evaluation","minPriceNotEntered","price_min_not_entered","maxPriceNotEntered","price_max_not_entered","onInvalidPrice","price_invalid_value","$productListingContainer","$facetedSearchContainer","requestOptions","config","category","shop_by_price","products","limit","categoryProductsPerPage","template","productListing","sidebar","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","CatalogPage","isTranslationDictionaryNotEmpty","dictionary","Object","keys","activeDictionary","i","JSON","parse","chooseActiveDictionary","validationDictionaryJSON","validationFallbackDictionaryJSON","validationDefaultDictionaryJSON","localizations","values","map","key","split","pop","reduce","acc","updateCounterNav","counter","$link","urls","is","addClass","compare","join","find","removeClass","noCompareMessage","compareCounter","$compareLink","$checked","index","element","value","get","event","item","product","$clickedCompareLink","checked","push","indexOf","splice","decrementCounter","showAlertModal","urlUtils","getUrl","window","location","pathname","search","goToUrl","url","history","pushState","document","title","trigger","replaceParams","params","param","parsed","Url","hasOwnProperty","query","format","buildQueryString","queryData","out","Array","isArray","ndx","substring","parseQueryParams","temp","addEventListener","activeElement","id","localStorage","setItem","$sortBySelector","getItem","removeItem","href","queryParams","serialize","page","preventDefault","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","options","collapsedFacets","collapsedFacetItems","collapsibleFactory","initPriceValidator","each","navList","collapseFacetItems","accordionToggle","collapsible","data","isCollapsed","targetId","setTimeout","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","includes","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","val","toLowerCase","text","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","validator","nod","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","assign","areAll","constants","VALID","decodeURI","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","replaceState"],"mappings":"8TAIuF,IAElEA,EAAQ,Y,QACzB,WAAYC,GAAS,MAEgD,OADjE,cAAMA,IAAQ,MACTC,qBAAuBC,YAA4BF,GAAS,E,EAH5C,G,EAAA,G,sEAIxB,kBA4FA,OA5FA,EAEDG,wBAAA,SAAwBC,EAAUC,EAAUC,GACxCF,EAASG,KAAK,CACVC,KAAMH,EACN,YAAaC,KAEpB,EAEDG,gCAAA,WAAkC,WACzBC,EAAE,wBAAwBC,SAE3BD,EAAE,mBAAmBE,SAAS,cAC9BF,EAAE,8BAA8BG,QAGpCH,EAAE,oBAAoBI,GAAG,SAAS,kBAAM,EAAKX,wBAAwBO,EAAE,6BAA8B,SAAU,kBAClH,EAEDK,QAAA,WAAU,WACNC,KAAKC,uBAELP,EAAE,iCAAiCI,GAAG,SAAS,SAACI,GAAC,OAAK,EAAKf,wBAAwBO,EAAEQ,EAAEC,eAAeC,OAAQ,SAAU,aAExHJ,KAAKP,kCAELY,YAAgBL,KAAKhB,SAEjBU,EAAE,kBAAkBC,OAAS,EAC7BK,KAAKM,qBAELN,KAAKO,eAAiBP,KAAKO,eAAeC,KAAKR,MAC/CS,IAAMX,GAAG,mBAAoBE,KAAKO,iBAGtCb,EAAE,eAAeI,GAAG,SAAS,kBAAM,EAAKY,yBAAyBhB,EAAE,sBAAuB,SAAU,aAEpGM,KAAKW,wBACR,EAEDA,qBAAA,WACI,IAAMC,EAAqBlB,EAAE,mCACzBkB,EAAmBjB,QACnBiB,EAAmBf,SAE1B,EAEDS,kBAAA,WACI,MAMIN,KAAKf,qBALiB4B,EAAe,EAArCC,qBACsBC,EAAe,EAArCC,qBACuBC,EAAkB,EAAzCC,sBACuBC,EAAkB,EAAzCC,sBACqBC,EAAc,EAAnCC,oBAEEC,EAA2B7B,EAAE,8BAC7B8B,EAA0B9B,EAAE,6BAE5B+B,EAAiB,CACnBC,OAAQ,CACJC,SAAU,CACNC,eAAe,EACfC,SAAU,CACNC,MANQ9B,KAAKhB,QAAQ+C,2BAUjCC,SAAU,CACNC,eAAgB,2BAChBC,QAAS,oBAEbC,SAAU,sBAGdnC,KAAKoC,cAAgB,IAAIC,IAAcZ,GAAgB,SAACa,GACpDf,EAAyBgB,KAAKD,EAAQL,gBACtCT,EAAwBe,KAAKD,EAAQJ,SAErCxC,EAAE,QAAQ8C,eAAe,gBAEzB9C,EAAE,cAAc+C,QAAQ,CACpBC,UAAW,GACZ,OACJ,CACCC,wBAAyB,CACrB9B,kBACAE,kBACAE,qBACAE,qBACAE,qBAGX,EAhGwB,CAASuB,M,kDCNtC,sCACMC,EAAkC,SAACC,GAAU,QAAOC,OAAOC,KAAKF,EAAuB,cAAGnD,QAgBnFT,EAA8B,SAACF,GACxC,IACMiE,EAjBqB,WAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAI,UAAmBvD,OAAQuD,IAAK,CAChD,IAAMJ,EAAaK,KAAKC,MAAyBF,EAAC,qBAADA,OAAC,YAADA,IACjD,GAAIL,EAAgCC,GAChC,OAAOA,GAaUO,CAD+ErE,EAAhGsE,yBAAgGtE,EAAtEuE,iCAAsEvE,EAApCwE,iCAE9DC,EAAgBV,OAAOW,OAAOT,EAA6B,cAGjE,OAFwBF,OAAOC,KAAKC,EAA6B,cAAGU,KAAI,SAAAC,GAAG,OAAIA,EAAIC,MAAM,KAAKC,SAEvEC,QAAO,SAACC,EAAKJ,EAAKV,GAErC,OADAc,EAAIJ,GAAOH,EAAcP,GAClBc,IACR,M,kCC1BP,wBAcA,SAASC,EAAiBC,EAASC,EAAOC,GACf,IAAnBF,EAAQvE,QACHwE,EAAME,GAAG,YACVF,EAAMG,SAAS,QAEnBH,EAAM5E,KAAK,OAAW6E,EAAKG,QAAO,IAAIL,EAAQM,KAAK,MACnDL,EAAMM,KAAK,kBAAkBlC,KAAK2B,EAAQvE,SAE1CwE,EAAMO,YAAY,QAIX,gBAAsC,IAA1BC,EAAgB,EAAhBA,iBAAkBP,EAAI,EAAJA,KACrCQ,EAAiB,GAEfC,EAAenF,EAAE,uBAEvBA,EAAE,QAAQI,GAAG,gBAAgB,WACzB,IAAMgF,EAAWpF,EAAE,QAAQ+E,KAAK,oCAGhCR,EADAW,EAAiBE,EAASnF,OAASmF,EAASnB,KAAI,SAACoB,EAAOC,GAAO,OAAKA,EAAQC,SAAOC,MAAQ,GAC1DL,EAAcT,MAGnD1E,EAAE,QAAQ8C,eAAe,gBAEzB9C,EAAE,QAAQI,GAAG,QAAS,qBAAqB,SAAAqF,GACvC,IA/B2BC,EA+BrBC,EAAUF,EAAMhF,cAAc8E,MAC9BK,EAAsB5F,EAAE,uBAE1ByF,EAAMhF,cAAcoF,SAlCGH,EAmCUC,EAAhBT,EAlCjBY,KAAKJ,IATjB,SAA0BlB,EAASkB,GAC/B,IAAML,EAAQb,EAAQuB,QAAQL,GAE1BL,GAAS,GACTb,EAAQwB,OAAOX,EAAO,GAyClBY,CAAiBf,EAAgBS,GAGrCpB,EAAiBW,EAAgBU,EAAqBlB,MAG1D1E,EAAE,QAAQI,GAAG,QAAS,uBAAuB,WAGzC,GAF6BJ,EAAE,QAAQ+E,KAAK,oCAEnB9E,QAAU,EAE/B,OADAiG,YAAejB,IACR,Q,mDC1DnB,kCAEMkB,EAAW,CACbC,OAAQ,oBAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE5DC,QAAS,SAACC,GACNL,OAAOM,QAAQC,UAAU,GAAIC,SAASC,MAAOJ,GAC7C1G,EAAEqG,QAAQU,QAAQ,gBAGtBC,cAAe,SAACN,EAAKO,GACjB,IACIC,EADEC,EAASC,IAAI1D,MAAMgD,GAAK,GAM9B,IAAKQ,KAFLC,EAAOX,OAAS,KAEFS,EACNA,EAAOI,eAAeH,KACtBC,EAAOG,MAAMJ,GAASD,EAAOC,IAIrC,OAAOE,IAAIG,OAAOJ,IAGtBK,iBAAkB,SAACC,GACf,IACIvD,EADAwD,EAAM,GAEV,IAAKxD,KAAOuD,EACR,GAAIA,EAAUJ,eAAenD,GACzB,GAAIyD,MAAMC,QAAQH,EAAUvD,IAAO,CAC/B,IAAI2D,OAAG,EAEP,IAAKA,KAAOJ,EAAUvD,GACduD,EAAUvD,GAAKmD,eAAeQ,KAC9BH,GAAO,IAAIxD,EAAG,IAAIuD,EAAUvD,GAAK2D,SAIzCH,GAAO,IAAIxD,EAAG,IAAIuD,EAAUvD,GAKxC,OAAOwD,EAAII,UAAU,IAGzBC,iBAAkB,SAACN,GAGf,IAFA,IAAMR,EAAS,GAENzD,EAAI,EAAGA,EAAIiE,EAAUxH,OAAQuD,IAAK,CACvC,IAAMwE,EAAOP,EAAUjE,GAAGW,MAAM,KAE5B6D,EAAK,KAAMf,EACPU,MAAMC,QAAQX,EAAOe,EAAK,KAC1Bf,EAAOe,EAAK,IAAIlC,KAAKkC,EAAK,IAE1Bf,EAAOe,EAAK,IAAM,CAACf,EAAOe,EAAK,IAAKA,EAAK,IAG7Cf,EAAOe,EAAK,IAAMA,EAAK,GAI/B,OAAOf,IAIAd,Q,iQCnEO,IAEDjD,EAAW,Y,QAC5B,WAAY5D,GAAS,MAOd,OANH,cAAMA,IAAQ,KAEd+G,OAAO4B,iBAAiB,gBAAgB,WACF,SAA9BpB,SAASqB,cAAcC,IACvB9B,OAAO+B,aAAaC,QAAQ,eAAgB,eAEjD,E,EARqB,G,EAAA,G,sEAS3B,kBAoBA,OApBA,EAED9H,qBAAA,WACI,IAAM+H,EAAkBtI,EAAE,kCAEtBqG,OAAO+B,aAAaG,QAAQ,kBAC5BD,EAAgBnI,QAChBkG,OAAO+B,aAAaI,WAAW,kBAEtC,EAED3H,eAAA,SAAe4E,EAAOhF,GAClB,IAAMiG,EAAMU,IAAI1D,MAAM2C,OAAOC,SAASmC,MAAM,GACtCC,EAAc1I,EAAES,GAAekI,YAAYxE,MAAM,KAEvDuC,EAAIY,MAAMoB,EAAY,IAAMA,EAAY,UACjChC,EAAIY,MAAMsB,KAEjBnD,EAAMoD,iBACNxC,OAAOC,SAAWc,IAAIG,OAAO,CAAEhB,SAAUG,EAAIH,SAAUC,OAAQL,IAASqB,iBAAiBd,EAAIY,UAChG,EA7B2B,CAASwB,O,4LCMnCC,EAAiB,CACnBC,wBAAyB,6EACzBC,gBAAiB,0BACjBC,mBAAoB,0CACpBC,kBAAmB,yBACnBC,qBAAsB,0BACtBC,wBAAyB,wCACzBC,2BAA4B,mCAC5BC,uBAAwB,oBACxBC,2BAA4B,qCAC5BC,2BAA4B,qCAC5BC,uBAAwB,gDACxBC,yBAA0B,yCAC1BC,MAAOC,YAAa,UAAU,GAC9BC,WAAW,GAMTnH,EAAa,WAqBf,WAAYZ,EAAgBgI,EAAUC,GAAS,WAE3C1J,KAAKyB,eAAiBA,EACtBzB,KAAKyJ,SAAWA,EAChBzJ,KAAK0J,QAAU,IAAS,GAAIjB,EAAgBiB,GAC5C1J,KAAK2J,gBAAkB,GACvB3J,KAAK4J,oBAAsB,GAG3BC,cAGA7J,KAAK8J,qBAGLpK,EAAEM,KAAK0J,QAAQZ,sBAAsBiB,MAAK,SAAChF,EAAOiF,GAC9C,EAAKC,mBAAmBvK,EAAEsK,OAI9BtK,EAAEM,KAAK0J,QAAQhB,yBAAyBqB,MAAK,SAAChF,EAAOmF,GACjD,IACMC,EADmBzK,EAAEwK,GACUE,KAAK,uBAEtCD,EAAYE,aACZ,EAAKV,gBAAgBnE,KAAK2E,EAAYG,aAM9CC,YAAW,WACH7K,EAAE,EAAKgK,QAAQb,mBAAmBxE,GAAG,YACrC,EAAKmG,uBAKbxK,KAAKyK,cAAgBzK,KAAKyK,cAAcjK,KAAKR,MAC7CA,KAAK0K,cAAgB1K,KAAK0K,cAAclK,KAAKR,MAC7CA,KAAK2K,kBAAoB3K,KAAK2K,kBAAkBnK,KAAKR,MACrDA,KAAK4K,aAAe5K,KAAK4K,aAAapK,KAAKR,MAC3CA,KAAK6K,aAAe7K,KAAK6K,aAAarK,KAAKR,MAC3CA,KAAK8K,cAAgB9K,KAAK8K,cAActK,KAAKR,MAC7CA,KAAKO,eAAiBP,KAAKO,eAAeC,KAAKR,MAC/CA,KAAK+K,iBAAmB/K,KAAK+K,iBAAiBvK,KAAKR,MAEnDA,KAAKgL,aAGT,kBA4UC,OA5UD,EACAC,YAAA,SAAY3I,GACJA,GACAtC,KAAKyJ,SAASnH,GAIlBuH,cAGA7J,KAAK8J,qBAGL9J,KAAKkL,yBACLlL,KAAKmL,6BAGLnL,KAAKgL,cACR,EAEDI,WAAA,WAAa,WACT1L,EAAEM,KAAK0J,QAAQf,iBAAiB0C,OAEhCC,IAAIC,QAAQ1F,IAASC,SAAU9F,KAAKyB,gBAAgB,SAAC+J,EAAKlJ,GAGtD,GAFA5C,EAAE,EAAKgK,QAAQf,iBAAiB8C,OAE5BD,EACA,MAAM,IAAIE,MAAMF,GAIpB,EAAKP,YAAY3I,OAExB,EAEDqJ,iBAAA,SAAiBC,GACb,IAAM/D,EAAK+D,EAASrM,KAAK,MAGzBS,KAAK4J,oBAAsB,IAAU5J,KAAK4J,oBAAqB/B,IAClE,EAEDoC,mBAAA,SAAmB2B,GACf,IAAM/D,EAAK+D,EAASrM,KAAK,MACnBsM,EAAiBD,EAASxB,KAAK,kBAGjCpK,KAAK4J,oBADLiC,EAC2B,IAAQ7L,KAAK4J,oBAAqB,CAAC/B,IAEnC,IAAU7H,KAAK4J,oBAAqB/B,IAEtE,EAEDiE,iBAAA,SAAiBF,GACb,IAAM/D,EAAK+D,EAASrM,KAAK,MAGzB,OAAIS,KAAK4J,oBAAoBmC,SAASlE,IAClC7H,KAAKgM,oBAAoBJ,IAElB,IAGX5L,KAAKiK,mBAAmB2B,IAEjB,IACV,EAEDI,oBAAA,SAAoBJ,GAAU,WACpBK,EAAQL,EAASxB,KAAK,SACtB8B,EAAWrG,IAASC,SAqB1B,OAnBI9F,KAAKyB,eAAeU,UACpBmJ,IAAIC,QAAQW,EAAU,CAClBlK,SAAUhC,KAAKyB,eAAeU,SAC9BwE,OAAQ,CACJwF,SAAUF,KAEf,SAACT,EAAKY,GACL,GAAIZ,EACA,MAAM,IAAIE,MAAMF,GAGpB,EAAK9B,QAAQJ,MAAM+C,OACnB,EAAK3C,QAAQF,WAAY,EACzB,EAAKE,QAAQJ,MAAMgD,cAAcF,MAIzCpM,KAAKiK,mBAAmB2B,IAEjB,GACV,EAEDb,iBAAA,SAAiB5F,GACb,IAAMoH,EAAS7M,EAAE,iBACXsH,EAAQtH,EAAEyF,EAAMhF,eAAeqM,MAAMC,cAE3CF,EAAOxC,MAAK,SAAChF,EAAOC,IAEa,IADhBtF,EAAEsF,GAAS0H,OAAOD,cACtBhH,QAAQuB,GACbtH,EAAEsF,GAASqG,OAEX3L,EAAEsF,GAASyG,WAGtB,EAEDkB,YAAA,SAAYC,GACYA,EAAiBxC,KAAK,uBAE9BiC,QACf,EAEDQ,cAAA,SAAcD,GACUA,EAAiBxC,KAAK,uBAE9B0C,SACf,EAEDtC,kBAAA,WAAoB,WACU9K,EAAEM,KAAK0J,QAAQhB,yBAEvBqB,MAAK,SAAChF,EAAOmF,GAC3B,IAAM0C,EAAmBlN,EAAEwK,GAE3B,EAAK2C,cAAcD,OAE1B,EAEDG,gBAAA,WAAkB,WACYrN,EAAEM,KAAK0J,QAAQhB,yBAEvBqB,MAAK,SAAChF,EAAOmF,GAC3B,IAAM0C,EAAmBlN,EAAEwK,GAE3B,EAAKyC,YAAYC,OAIzB,EACA9C,mBAAA,WACI,GAAsD,IAAlDpK,EAAEM,KAAK0J,QAAQT,wBAAwBtJ,OAA3C,CAIA,IAAMqN,EAAYC,cACZC,EAAY,CACdC,cAAenN,KAAK0J,QAAQX,wBAC5BqE,iBAAkBpN,KAAK0J,QAAQV,2BAC/BqE,aAAcrN,KAAK0J,QAAQT,uBAC3BqE,iBAAkBtN,KAAK0J,QAAQR,2BAC/BqE,iBAAkBvN,KAAK0J,QAAQP,4BAGnCqE,IAAWC,yBAAyBT,EAAWE,EAAWlN,KAAK0J,QAAQ/G,yBAEvE3C,KAAK0N,oBAAsBV,IAC9B,EAED7B,2BAAA,WAA6B,WACPzL,EAAEM,KAAK0J,QAAQZ,sBAGvBiB,MAAK,SAAChF,EAAOiF,GACnB,IAAM4B,EAAWlM,EAAEsK,GACbnC,EAAK+D,EAASrM,KAAK,MACF,EAAKqK,oBAAoBmC,SAASlE,GAGrD,EAAKoC,mBAAmB2B,GAExB,EAAKD,iBAAiBC,OAGjC,EAEDV,uBAAA,WAAyB,WACKxL,EAAEM,KAAK0J,QAAQhB,yBAEvBqB,MAAK,SAAChF,EAAOmF,GAC3B,IAAM0C,EAAmBlN,EAAEwK,GAErBrC,EADc+E,EAAiBxC,KAAK,uBACnBE,SACA,EAAKX,gBAAgBoC,SAASlE,GAGjD,EAAKgF,cAAcD,GAEnB,EAAKD,YAAYC,OAG5B,EAED5B,WAAA,WAEIhL,KAAK2N,eAGLjO,EAAEqG,QAAQjG,GAAG,cAAeE,KAAKyK,eACjC/K,EAAEqG,QAAQjG,GAAG,WAAYE,KAAK4N,YAC9BlO,EAAE6G,UAAUzG,GAAG,QAASE,KAAK0J,QAAQN,uBAAwBpJ,KAAK0K,eAClEhL,EAAE6G,UAAUzG,GAAG,qBAAsBE,KAAK0J,QAAQhB,wBAAyB1I,KAAK2K,mBAChFjL,EAAE6G,UAAUzG,GAAG,QAASE,KAAK0J,QAAQL,yBAA0BrJ,KAAK+K,kBACpErL,EAAEM,KAAK0J,QAAQd,oBAAoB9I,GAAG,QAASE,KAAK4K,cAGpDnK,IAAMX,GAAG,8BAA+BE,KAAK6K,cAC7CpK,IAAMX,GAAG,gCAAiCE,KAAK8K,eAC/CrK,IAAMX,GAAG,mBAAoBE,KAAKO,iBACrC,EAEDoN,aAAA,WAEIjO,EAAEqG,QAAQ8H,IAAI,cAAe7N,KAAKyK,eAClC/K,EAAEqG,QAAQ8H,IAAI,WAAY7N,KAAK4N,YAC/BlO,EAAE6G,UAAUsH,IAAI,QAAS7N,KAAK0J,QAAQN,uBAAwBpJ,KAAK0K,eACnEhL,EAAE6G,UAAUsH,IAAI,qBAAsB7N,KAAK0J,QAAQhB,wBAAyB1I,KAAK2K,mBACjFjL,EAAE6G,UAAUsH,IAAI,QAAS7N,KAAK0J,QAAQL,yBAA0BrJ,KAAK+K,kBACrErL,EAAEM,KAAK0J,QAAQd,oBAAoBiF,IAAI,QAAS7N,KAAK4K,cAGrDnK,IAAMoN,IAAI,8BAA+B7N,KAAK6K,cAC9CpK,IAAMoN,IAAI,gCAAiC7N,KAAK8K,eAChDrK,IAAMoN,IAAI,mBAAoB7N,KAAKO,iBACtC,EAEDqK,aAAA,SAAazF,GACT,IACMiB,EADQ1G,EAAEyF,EAAMhF,eACJZ,KAAK,QAEvB4F,EAAMoD,iBACNpD,EAAM2I,kBAGNjI,IAASM,QAAQC,IACpB,EAEDsE,cAAA,SAAcvF,GACV,IAAM4I,EAAUrO,EAAEyF,EAAMhF,eAClByL,EAAWlM,EAAEqO,EAAQxO,KAAK,SAGhC4F,EAAMoD,iBAGNvI,KAAK8L,iBAAiBF,IACzB,EAEDf,aAAA,SAAa1F,EAAOhF,GAChB,IAAMgE,EAAQzE,EAAES,GACViG,EAAMjC,EAAM5E,KAAK,QAEvB4F,EAAMoD,iBAENpE,EAAM6J,YAAY,eAGlBnI,IAASM,QAAQC,GAEbpG,KAAK0J,QAAQF,WACbxJ,KAAK0J,QAAQJ,MAAMwD,SAE1B,EAEDvM,eAAA,SAAe4E,EAAOhF,GAClB,IAAMiG,EAAMU,IAAI1D,MAAM2C,OAAOC,SAASmC,MAAM,GACtCC,EAAc1I,EAAES,GAAekI,YAAYxE,MAAM,KAEvDuC,EAAIY,MAAMoB,EAAY,IAAMA,EAAY,UACjChC,EAAIY,MAAMsB,KAGjB,IAAM2F,EAAiB,GACvBlL,OAAOmL,OAAOD,EAAgB7H,EAAIY,OAElC7B,EAAMoD,iBAEN1C,IAASM,QAAQW,IAAIG,OAAO,CAAEhB,SAAUG,EAAIH,SAAUC,OAAQL,IAASqB,iBAAiB+G,OAC3F,EAEDnD,cAAA,SAAc3F,EAAOhF,GAGjB,GAFAgF,EAAMoD,iBAEDvI,KAAK0N,oBAAoBS,OAAOlB,IAAImB,UAAUC,OAAnD,CAIA,IAAMjI,EAAMU,IAAI1D,MAAM2C,OAAOC,SAASmC,MAAM,GACxCC,EAAckG,UAAU5O,EAAES,GAAekI,aAAaxE,MAAM,KAGhE,IAAK,IAAMD,KAFXwE,EAAcvC,IAAS4B,iBAAiBW,GAGhCA,EAAYrB,eAAenD,KAC3BwC,EAAIY,MAAMpD,GAAOwE,EAAYxE,IAKrC,IAAMqK,EAAiB,GACvBlL,OAAOmL,OAAOD,EAAgB7H,EAAIY,OAElCnB,IAASM,QAAQW,IAAIG,OAAO,CAAEhB,SAAUG,EAAIH,SAAUC,OAAQL,IAASqB,iBAAiB+G,QAC3F,EAEDxD,cAAA,WACIzK,KAAKoL,cACR,EAEDT,kBAAA,SAAkBxF,GACd,IACMgF,EADmBzK,EAAEyF,EAAMhF,eACIiK,KAAK,uBACpCvC,EAAKsC,EAAYG,SAEnBH,EAAYE,YACZrK,KAAK2J,gBAAkB,IAAQ3J,KAAK2J,gBAAiB,CAAC9B,IAEtD7H,KAAK2J,gBAAkB,IAAU3J,KAAK2J,gBAAiB9B,IAE9D,EAED+F,WAAA,WACI,IAAMW,EAAaxI,OAAOC,SAASmC,KAGnC,IAFqB,IAAIqG,gBAAgBD,GAEvBE,IAAI,QAAS,CAC3B,IAEMC,EAFUhP,EAAE,oBAAoBH,KAAK,QAEZoP,QADpB,eACgC,UAC3C5I,OAAOM,QAAQuI,aAAa,GAAIrI,SAASC,MAAOkI,GAEpDhP,EAAEqG,QAAQU,QAAQ,gBACrB,EAnZc,GAsZJpE,Q","file":"theme-bundle.chunk.11.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport compareProducts from './global/compare-products';\nimport FacetedSearch from './common/faceted-search';\nimport { createTranslationDictionary } from '../theme/common/utils/translations-utils';\n\nexport default class Category extends CatalogPage {\n    constructor(context) {\n        super(context);\n        this.validationDictionary = createTranslationDictionary(context);\n    }\n\n    setLiveRegionAttributes($element, roleType, ariaLiveStatus) {\n        $element.attr({\n            role: roleType,\n            'aria-live': ariaLiveStatus,\n        });\n    }\n\n    makeShopByPriceFilterAccessible() {\n        if (!$('[data-shop-by-price]').length) return;\n\n        if ($('.navList-action').hasClass('is-active')) {\n            $('a.navList-action.is-active').focus();\n        }\n\n        $('a.navList-action').on('click', () => this.setLiveRegionAttributes($('span.price-filter-message'), 'status', 'assertive'));\n    }\n\n    onReady() {\n        this.arrangeFocusOnSortBy();\n\n        $('[data-button-type=\"add-cart\"]').on('click', (e) => this.setLiveRegionAttributes($(e.currentTarget).next(), 'status', 'polite'));\n\n        this.makeShopByPriceFilterAccessible();\n\n        compareProducts(this.context);\n\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        $('a.reset-btn').on('click', () => this.setLiveRegionsAttributes($('span.reset-message'), 'status', 'polite'));\n\n        this.ariaNotifyNoProducts();\n    }\n\n    ariaNotifyNoProducts() {\n        const $noProductsMessage = $('[data-no-products-notification]');\n        if ($noProductsMessage.length) {\n            $noProductsMessage.focus();\n        }\n    }\n\n    initFacetedSearch() {\n        const {\n            price_min_evaluation: onMinPriceError,\n            price_max_evaluation: onMaxPriceError,\n            price_min_not_entered: minPriceNotEntered,\n            price_max_not_entered: maxPriceNotEntered,\n            price_invalid_value: onInvalidPrice,\n        } = this.validationDictionary;\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const productsPerPage = this.context.categoryProductsPerPage;\n        const requestOptions = {\n            config: {\n                category: {\n                    shop_by_price: true,\n                    products: {\n                        limit: productsPerPage,\n                    },\n                },\n            },\n            template: {\n                productListing: 'category/product-listing',\n                sidebar: 'category/sidebar',\n            },\n            showMore: 'category/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n\n            $('body').triggerHandler('compareReset');\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        }, {\n            validationErrorMessages: {\n                onMinPriceError,\n                onMaxPriceError,\n                minPriceNotEntered,\n                maxPriceNotEntered,\n                onInvalidPrice,\n            },\n        });\n    }\n}\n","const TRANSLATIONS = 'translations';\nconst isTranslationDictionaryNotEmpty = (dictionary) => !!Object.keys(dictionary[TRANSLATIONS]).length;\nconst chooseActiveDictionary = (...dictionaryJsonList) => {\n    for (let i = 0; i < dictionaryJsonList.length; i++) {\n        const dictionary = JSON.parse(dictionaryJsonList[i]);\n        if (isTranslationDictionaryNotEmpty(dictionary)) {\n            return dictionary;\n        }\n    }\n};\n\n/**\n * defines Translation Dictionary to use\n * @param context provides access to 3 validation JSONs from en.json:\n * validation_messages, validation_fallback_messages and default_messages\n * @returns {Object}\n */\nexport const createTranslationDictionary = (context) => {\n    const { validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON } = context;\n    const activeDictionary = chooseActiveDictionary(validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON);\n    const localizations = Object.values(activeDictionary[TRANSLATIONS]);\n    const translationKeys = Object.keys(activeDictionary[TRANSLATIONS]).map(key => key.split('.').pop());\n\n    return translationKeys.reduce((acc, key, i) => {\n        acc[key] = localizations[i];\n        return acc;\n    }, {});\n};\n","import { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urls) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urls.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function ({ noCompareMessage, urls }) {\n    let compareCounter = [];\n\n    const $compareLink = $('a[data-compare-nav]');\n\n    $('body').on('compareReset', () => {\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        compareCounter = $checked.length ? $checked.map((index, element) => element.value).get() : [];\n        updateCounterNav(compareCounter, $compareLink, urls);\n    });\n\n    $('body').triggerHandler('compareReset');\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urls);\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal(noCompareMessage);\n            return false;\n        }\n    });\n}\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    constructor(context) {\n        super(context);\n\n        window.addEventListener('beforeunload', () => {\n            if (document.activeElement.id === 'sort') {\n                window.localStorage.setItem('sortByStatus', 'selected');\n            }\n        });\n    }\n\n    arrangeFocusOnSortBy() {\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\n\n        if (window.localStorage.getItem('sortByStatus')) {\n            $sortBySelector.focus();\n            window.localStorage.removeItem('sortByStatus');\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './utils/url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './utils/form-utils';\nimport nod from './nod';\n\n\nconst defaultOptions = {\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n    blockerSelector: '#facetedSearch .blocker',\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n    componentSelector: '#facetedSearch-navList',\n    facetNavListSelector: '#facetedSearch .navList',\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n    priceRangeFormSelector: '#facet-range-form',\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n    modal: modalFactory('#modal')[0],\n    modalOpen: false,\n};\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (this.collapsedFacetItems.includes(id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = this.collapsedFacetItems.includes(id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = this.collapsedFacets.includes(id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(window).on('popstate', this.onPopState);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(window).off('popstate', this.onPopState);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event, currentTarget) {\n        const $link = $(currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onRangeSubmit(event, currentTarget) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n\n    onPopState() {\n        const currentUrl = window.location.href;\n        const searchParams = new URLSearchParams(currentUrl);\n        // If searchParams does not contain a page value then modify url query string to have page=1\n        if (!searchParams.has('page')) {\n            const linkUrl = $('.pagination-link').attr('href');\n            const re = /page=[0-9]+/i;\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\n            window.history.replaceState({}, document.title, updatedLinkUrl);\n        }\n        $(window).trigger('statechange');\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}